package eg.edu.alexu.csd.filestructure.sort.cs23;

import java.util.ArrayList;

import eg.edu.alexu.csd.filestructure.sort.IHeap;
import eg.edu.alexu.csd.filestructure.sort.ISort;

public class Sort<T extends Comparable<T>> implements ISort<T> {

	
	@Override
	public IHeap<T> heapSort(ArrayList<T> unordered) {
		MaxHeap<T> heap = new MaxHeap<>();
		heap.build(unordered);
		MaxHeap<T> clone = new MaxHeap<T>();
		clone.build(unordered);
		
		int size = heap.items.size();
		
		unordered.clear();
		for(int i = 0; i < size; i++){
			unordered.add(heap.extract());
		}
		
		return clone;
	}

	@Override
	public void sortSlow(ArrayList<T> unordered) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void sortFast(ArrayList<T> unordered) {
		// TODO Auto-generated method stub
		
	}

}
